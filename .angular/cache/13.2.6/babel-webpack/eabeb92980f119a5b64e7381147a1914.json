{"ast":null,"code":"import * as firebase from 'firebase/auth';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let LoginService = /*#__PURE__*/(() => {\n  class LoginService {\n    constructor(router) {\n      this.router = router;\n    }\n\n    login(email, password) {\n      const auth = firebase.getAuth(); // Procesamos el email y la password\n\n      firebase.signInWithEmailAndPassword(auth, email, password).then(response => {\n        var _a;\n\n        (_a = auth.currentUser) === null || _a === void 0 ? void 0 : _a.getIdToken().then(token => {\n          // Obtenemos el token\n          this.token = token; // Redirección a la página principal\n\n          this.router.navigate(['/']);\n        });\n      });\n    }\n\n    getIdToken() {\n      return this.token;\n    }\n\n    isAutenticado() {\n      return this.token != null;\n    }\n\n    logout() {\n      firebase.getAuth().signOut().then(() => {\n        this.token = '';\n        this.router.navigate(['login']);\n      }).catch(error => {\n        console.log('Error de logout: ' + error);\n      });\n    }\n\n  }\n\n  LoginService.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.Router));\n  };\n\n  LoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac\n  });\n  return LoginService;\n})();","map":null,"metadata":{},"sourceType":"module"}